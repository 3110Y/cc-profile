// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/3110Y/profile/internal/application/service (interfaces: RoleRepositoryInterface)

// Package service is a generated GoMock package.
package service

import (
	context "context"
	reflect "reflect"

	entity "github.com/3110Y/profile/internal/domain/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockRoleRepositoryInterface is a mock of RoleRepositoryInterface interface.
type MockRoleRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRoleRepositoryInterfaceMockRecorder
}

// MockRoleRepositoryInterfaceMockRecorder is the mock recorder for MockRoleRepositoryInterface.
type MockRoleRepositoryInterfaceMockRecorder struct {
	mock *MockRoleRepositoryInterface
}

// NewMockRoleRepositoryInterface creates a new mock instance.
func NewMockRoleRepositoryInterface(ctrl *gomock.Controller) *MockRoleRepositoryInterface {
	mock := &MockRoleRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockRoleRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRoleRepositoryInterface) EXPECT() *MockRoleRepositoryInterfaceMockRecorder {
	return m.recorder
}

// Count mocks base method.
func (m *MockRoleRepositoryInterface) Count(arg0 context.Context) (*uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Count", arg0)
	ret0, _ := ret[0].(*uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Count indicates an expected call of Count.
func (mr *MockRoleRepositoryInterfaceMockRecorder) Count(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Count", reflect.TypeOf((*MockRoleRepositoryInterface)(nil).Count), arg0)
}

// Get mocks base method.
func (m *MockRoleRepositoryInterface) Get(arg0 context.Context, arg1 string) (*entity.Role, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*entity.Role)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockRoleRepositoryInterfaceMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRoleRepositoryInterface)(nil).Get), arg0, arg1)
}

// List mocks base method.
func (m *MockRoleRepositoryInterface) List(arg0 context.Context, arg1, arg2 uint64) (*[]entity.Role, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1, arg2)
	ret0, _ := ret[0].(*[]entity.Role)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockRoleRepositoryInterfaceMockRecorder) List(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockRoleRepositoryInterface)(nil).List), arg0, arg1, arg2)
}
